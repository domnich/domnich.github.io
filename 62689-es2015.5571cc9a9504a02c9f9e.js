"use strict";(self.webpackChunkcloudya=self.webpackChunkcloudya||[]).push([[62689],{62689:function(e,t,n){n.r(t),n.d(t,{TransportChromeExtension:function(){return o}});var s=n(30281);class o{constructor(e,t){this.logger=e,this.recorder=t,this.events=new s.S,this.consoleAppEvent=this.events,this.connectHasBeenCalled=!1,this.context=s.T.CHROME_EXTENSION}connect(){return this.connectHasBeenCalled?Promise.reject(new s.J("Already connected",s.E.UNEXPECTED_ERROR)):(this.connectHasBeenCalled=!0,window.addEventListener("message-from-jabra-chrome-extension",e=>{var t;let n=e.detail;this.recorder&&(n=null===(t=this.recorder)||void 0===t?void 0:t.recordInput(n)),this.events.next(n)}),this.writeAction({event:"ping"}),Promise.resolve())}static checkInstallation(){return(0,s._)(this,void 0,void 0,function*(){return new Promise(e=>{const t=new CustomEvent("message-to-jabra-chrome-extension",{detail:"check-console-app-installation"});window.dispatchEvent(t),window.addEventListener("installation-status-from-jabra-chrome-extension",t=>{e({ok:t.detail,message:t.detail?"Installation ok":"The Jabra Chromehost is not installed"})}),setTimeout(()=>{e({ok:!1,message:"The Jabra Chrome Extension is not installed"})},3e3)})})}writeAction(e){var t;null===(t=this.recorder)||void 0===t||t.recordOutput(e),window.dispatchEvent(new CustomEvent("message-to-jabra-chrome-extension",{detail:e}))}}}}]);